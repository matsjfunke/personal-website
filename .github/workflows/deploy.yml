name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_KEY_PASSPHRASE }}
          script: |
            cd /opt/personal-website
            git fetch origin main
            git reset --hard origin/main

            echo "üîÑ Stopping containers..."
            docker-compose down

            echo "üèóÔ∏è Building containers..."
            docker-compose build --no-cache

            echo "üöÄ Starting containers..."
            docker-compose up -d

            echo "‚è≥ Waiting for containers to start..."
            sleep 10

            echo "üìä Container status:"
            docker-compose ps --format "table {{.Service}}\t{{.Status}}\t{{.Ports}}"

            echo "üìã Recent logs from all services (filtered):"
            docker-compose logs --tail=30 | grep -E "(ERROR|WARN|INFO|Ready|Starting|Listening)" | head -50

            echo "üßπ Cleaning up..."
            docker system prune -f

      - name: Show specific service logs on failure
        if: failure()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_KEY_PASSPHRASE }}
          script: |
            cd /opt/personal-website
            echo "üîç Filtered logs for debugging:"
            echo "--- Traefik status ---"
            docker-compose logs --tail=50 traefik | grep -E "(ERROR|WARN|Ready|Starting|tls|certificate)" | head -30
            echo "--- Personal Website status ---"
            docker-compose logs --tail=50 personal-website | grep -E "(ERROR|WARN|Ready|Starting|Listening|Build)" | head -30

      - name: Test website health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://matsjfunke.com || echo "000")

          if [ "$response" = "200" ]; then
            echo "‚úÖ Website is running successfully (HTTP 200)"
          else
            echo "‚ùå Website health check failed (HTTP $response)"
            exit 1
          fi

      - name: Test MCP endpoint health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST https://mcp.matsjfunke.com/mcp \
            -H "Content-Type: application/json" \
            -d '{"jsonrpc":"2.0","method":"ping","id":1}' || echo "000")

          if [ "$response" = "200" ]; then
            echo "‚úÖ MCP endpoint is running successfully (HTTP 200)"
          else
            echo "‚ùå MCP endpoint health check failed (HTTP $response)"
            echo "‚ÑπÔ∏è  This might be expected if the CORS fix is still being applied"
          fi
